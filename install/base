#!/bin/bash
echo "----------------------------------------------------------------------"
echo "CHECKING IF SCRIPT IS RUN AS ROOT"
echo "----------------------------------------------------------------------"
if [[ $EUID -ne 0 ]]
then
    echo "You must be a root user to run this." 2>&1
    exit 1
else
	echo "Scipt is being run as root."
	echo
fi
echo "----------------------------------------------------------------------"
echo "CHECK IF SYSTEM IS BOOTED IN EFI MODE"
echo "----------------------------------------------------------------------"
ls /sys/firmware/efi/efivars
echo
echo "[ IF A DIRECTORY EXISTS, PRESS 'ENTER' TO CONTINUE ]"
read
echo "----------------------------------------------------------------------"
echo "UPDATING SYSTEM CLOCK"
echo "----------------------------------------------------------------------"
timedatectl set-ntp true
#timedatectl set-local-rtc 1 --adjust-system-clock
echo "----------------------------------------------------------------------"
echo "PARTITION THE DRIVE"
echo "----------------------------------------------------------------------"
fdisk -l
echo
lsblk
echo
echo "[ CFDISK - PRESS 'ENTER' TO CONTINUE ]"
read
cfdisk
fdisk -l
echo
lsblk
echo
echo "----------------------------------------------------------------------"
echo "INPUT VARIABLE VALUES"
echo "----------------------------------------------------------------------"
read -p "efipartition # (/dev/sda#) = /dev/sda" efipartition
echo
read -p "ospartition # (/dev/sda#) = /dev/sda" ospartition
echo
read -p "Enter bootloader-id: " bootloaderid
echo
read -p "Enter hostname: " hostname
echo
read -p "Enter username: " username
echo
read -rp "Enter user password: " userpass
echo
read -rp "Enter root password: " rootpass
echo
echo "----------------------------------------------------------------------"
echo "FORMAT + MOUNT [/] & [efi] PARTITIONS"
echo "----------------------------------------------------------------------"
mkfs.ext4 /dev/sda$ospartition
echo
mkfs.fat -F32 /dev/sda$efipartition
echo
mount /dev/sda$ospartition /mnt
echo
mount /dev/sda$efipartition /mnt/boot
echo
echo "----------------------------------------------------------------------"
echo "INSTALLING REFLECTOR AND UPDATING MIRRORLIST"
echo "----------------------------------------------------------------------"
pacman -S --needed --noconfirm reflector
reflector --verbose -l 100 -a 24 -p http -p https --sort rate --save /etc/pacman.d/mirrorlist
echo "----------------------------------------------------------------------"
echo "PACSTRAP - BASE + BASE-DEVEL"
echo "----------------------------------------------------------------------"
pacstrap /mnt linux-zen base base-devel linux-firmware sudo nano e2fsprogs networkmanager wget diffutils
echo
echo "----------------------------------------------------------------------"
echo "GENERATE FSTAB"
echo "----------------------------------------------------------------------"
genfstab -U /mnt >> /mnt/etc/fstab
echo
cat /mnt/etc/fstab
echo "---------------------------------------------------------------------"
echo "   __                 ___       __                                   "
echo "  |__| |  | |\ | |\ |  |  |\ | | _   _   _   _                       "
echo "  | \  |__| | \| | \| _|_ | \| |__| |_| |_| |_|                      "
echo "   _______    _     _    _______    _______    _______    _______    "
echo "  |  _____|  | |   | |  |  ___  |  |  ___  |  |  ___  |  |__   __|   "
echo "  | |        | |___| |  | |___| |  | |   | |  | |   | |     | |      "
echo "  | |        |  ___  |  |  _____|  | |   | |  | |   | |     | |      "
echo "  | |_____   | |   | |  | |  \ \   | |___| |  | |___| |     | |      "
echo "  |_______|  |_|   |_|  |_|   \_\  |_______|  |_______|     |_|      "
echo "---------------------------------------------------------------------"
echo
echo "[ SET TIMEZONE TO US-PACIFIC ]"
arch-chroot /mnt ln -sf /usr/share/zoneinfo/US/Pacific /etc/localtime
echo
echo "[ GENERATING /etc/adjtime ]"
# Generated with custom timedatectl command below
#timedatectl set-local-rtc 1 --adjust-system-clock
arch-chroot /mnt hwclock --systohc # --utc
echo
echo "[ SETTING LOCALE TO en_US.UTF-8 UTF-8 FOR AMERICAN-ENGLISH ]"
sed -i 's/^#en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/g' /mnt/etc/locale.gen
echo
echo "[ GENERATING LOCALE ]"
arch-chroot /mnt locale-gen
echo
echo "[ SETTING LANG VARIABLE TO LANG=en_US.UTF-8 ]"
echo "LANG=en_US.UTF-8" > /mnt/etc/locale.conf
echo
echo "[ SETTING HOSTNAME ]"
echo $hostname > /mnt/etc/hostname
echo
echo "[ SET ROOT PASSWORD ]"
arch-chroot /mnt sh -c "echo 'root:$rootpass' | chpasswd"
echo
echo "[ INSTALLING BOOT RELATED PACKAGES ]"
arch-chroot /mnt pacman -S --needed --noconfirm efibootmgr intel-ucode os-prober
echo
echo "[ INSTALLING EFISTUB TO /boot ]"
echo
arch-chroot /mnt blkid
echo
read -rp "Enter boot partition number: " bootpartnum
echo
read -rp "Enter boot partition part uuid: " blkidpartuuid
echo
arch-chroot /mnt efibootmgr --disk /dev/sda --part $bootpartnum --create --label "$bootloaderid" --loader /boot/vmlinuz-linux-zen --unicode 'root=PARTUUID=$blkidpartuuid rw initrd=\boot\initramfs-linux-zen.img initrd=/cpu_manufacturer-ucode.img initrd=/initramfs-linux.img' --verbose
echo
echo "[ ENABLING NETWORK MANAGER ]"
arch-chroot /mnt systemctl enable NetworkManager
echo
echo "[ CREATING USER WITH ADMINISTRATOR PRIVILIGES ]"
arch-chroot /mnt useradd -m -g users -G wheel -s /bin/bash $username
echo
echo "[ SET USER PASSWORD ]"
arch-chroot /mnt sh -c "echo '$username:$userpass' | chpasswd"
echo
echo "[ SETTING ADMINISTRATOR PRIVILIGES ]"
sed -i 's/^# %wheel ALL=(ALL) ALL/ %wheel ALL=(ALL) ALL/g' /mnt/etc/sudoers
echo
echo "----------------------------------------------------------------------"
echo "FINISHING INSTALL: MOVING DE FILES TO /mnt + REMOVING EXTRA FILES"
echo "----------------------------------------------------------------------"
cp /root/arch/install/*{gnome,kde,xfce,budgie,bedrock}* /mnt/home/$username
chmod +x /mnt/home/$username/*
rm -r /root/arch
echo
echo "[ UNMOUNT & REBOOT ]"
umount -R /mnt
reboot
