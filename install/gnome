#!/bin/bash
while [[ ! "$yesnowifi" =~ ^[yYnN]$ ]]; do read -n1 -p "Do you want to connect to wifi? [y/n] : " yesnowifi && echo; done
case $yesnowifi in
	y|Y)
		echo "[ CONNECT TO WIFI ]"
		nmcli device wifi list
		echo
		read -p "Enter your wifi SSID: " ssid
		read -p "Enter your wifi password: " wifipass
		nmcli device wifi connect $ssid password $wifipass
		echo ;;
	n|N)
		echo
		echo "Continuing..."
		echo ;;
esac
echo "[ UPDATING SYSTEM ]"
sudo pacman -Syu --noconfirm
echo
echo "[ TIMEDATECTL: ACTIVATE NTP SERVICE ]"
sudo timedatectl set-ntp true
echo "----------------------------------------------------------------------"
echo "INSTALLING GNOME"
echo "----------------------------------------------------------------------"
# Package Info: Don't reinstall|Don't Confirm (y/n)|Development Tools|Fast Updated Mirrors|Github|Terminal OS Info|NTFS Filesystem Support|Disk-Partition Utility    |Gnome DE   |Display Manager|File Manager|Terminal      |System Settings     |System Monitor      |Power Management   |Wallpapers       |Tweak Tool  |Screenshot      |View Images|Default Home Directories|Gnome Extensions  |Web Browser |Monospace Font|Touchpad Gestures|Dock |Common Theme Requirements        |Terminal Directory View|Nautilus Terminal|Arch Updates Extension|Requirement for some Gnome Extensions|Output to log file.
sudo pacman -S  --needed        --noconfirm         base-devel        reflector            git    neofetch         ntfs-3g                 gparted gnome-disk-utility gnome-shell gdm xorg-xinit  nautilus     gnome-terminal gnome-control-center gnome-system-monitor gnome-power-manager gnome-backgrounds gnome-tweaks gnome-screenshot eog         xdg-user-dirs            chrome-gnome-shell chromium     ttf-hack       xdotool wmctrl    plank gtk-engine-murrine gtk-engines bc tree                    nautilus-terminal pacman-contrib         xorg-xprop                           #|& tee -a /home/$USER/log-gnome-ARCH && echo "----------------------------------------------------------------------" >> log-gnome-ARCH
echo
echo "[ INSTALLING PIKAUR: AN AUR HELPER ]"
git clone https://aur.archlinux.org/pikaur.git
cd pikaur
makepkg -fsri --noconfirm
cd /home/$USER
sudo rm -r pikaur
echo
echo "[ INSTALLING AUR PACKAGES ]"
# Package Info: Don't reinstall|Don't Confirm (y/n)|Browser Plugin for DRM|AUR GUI Frontend|Admin Options |Good Text Editor|Touchpad Gestures|Theme Changer|MacOS like Icon Theme  |MacOS like Cursor Theme|                 
pikaur -S       --needed        --noconfirm         chromium-widevine      pamac-aur        nautilus-admin sublime-text-dev libinput-gestures automathemely la-capitaine-icon-theme capitaine-cursors
# Not needed: gnome-shell-extension-system-monitor-git lightdm-slick-greeter pulseaudio-bluetooth-a2dp-gdm-fix ttf-clear-sans
echo
echo "[ INSTALLING GNOME SHELL EXTENSION INSTALLER ]"
cd /home/$USER
wget -O gnome-shell-extension-installer "https://github.com/brunelli/gnome-shell-extension-installer/raw/master/gnome-shell-extension-installer"
chmod +x gnome-shell-extension-installer
sudo mv gnome-shell-extension-installer /usr/bin/
echo
echo "[ INSTALLING GNOME SHELL EXTENSIONS ]"
# Extension Info:               Arch Updates|Arrange Windows|Caffeine|Clock Override|Disable Workspace Switch Animation|Hide Activities Button|Impatience|Lock Keys|Apps View Columns|No Spring|No Top-Left Corner|No Annoyance|Notification Alert Color|Places|Remove Dash|Remove Dropdown Arrows|Suspend Button|Tweaks in System Menu|User Themes|Workspace Indicator|
gnome-shell-extension-installer 1010         1604            517      1206           1328                               1128                   277        36        1305              1303      118                1236         258                      8      1297        800                    826            1653                  19          21                 
# Top Icons: 1497 (not needed | last checked 07/04/2019)
# Hide Top Bar: 545 (not fully stable)
# TopIcons Plus: 1031 (not maintained | last checked 23/02/2019)
# Bottom panel: 949 (not fully stable)
# Transparent panel: 1011, 1708 (not fully stable)
# System-Monitor w/ PACMAN (not needed)
echo
echo "[ CUSTOMIZING DISPLAY MANAGER ]"
sudo sed -i '/WaylandEnable=false/s/^#//' /etc/gdm/custom.conf
echo
echo "[ ENABLING DISPLAY MANAGER ]"
sudo systemctl enable gdm
echo
echo "[ ENABLING BLUETOOTH ]"
sudo systemctl enable bluetooth
echo
echo "[ CUSTOMIZING TOUCHPAD GESTURES ]"
cp /etc/libinput-gestures.conf ~/.config/
sed -i '/^#/!s/\(.*\)/# \1/g' ~/.config/libinput-gestures.conf
cat << EOT >> /home/$USER/.config/libinput-gestures.conf
#
# Go to workspace above
gesture swipe up 3 _internal ws_up
# Go to workspace below
gesture swipe down 3 _internal ws_down
# Go forward
gesture swipe left 3 xdotool key alt+Right
# Go back
gesture swipe right 3 xdotool key alt+Left
# Open applications view
gesture swipe left_up 3 xdotool key super+a
# Open workspaces view
gesture swipe left_down 3 xdotool key super+s
# Tile window to the right
gesture pinch clockwise xdotool key super+Right
# Tile window to the left
gesture pinch anticlockwise xdotool key super+Left
EOT
echo
echo "[ ADDING USER TO 'INPUT' GRPUP ]"
sudo gpasswd -a $USER input
echo
echo "[ SETTING APPS TO AUTOSTART ]"
libinput-gestures-setup autostart
mkdir /home/$USER/.config/autostart
cp /usr/share/applications/plank.desktop /home/$USER/.config/autostart
echo
echo "[ SETTING PLANK THEME ]"
dconf write /net/launchpad/plank/docks/dock1/theme "'Transparent'"
echo
echo "[ DOWNLOADING MOJAVE WALLAPERS ]"
cd /home/$USER
sudo git clone https://github.com/navtojchahal/customization /home/$USER/customization
# ^
sudo rm -r /usr/share/backgrounds/gnome
sudo rm -r /usr/share/gnome-background-properties
sudo mkdir /usr/share/backgrounds/gnome
sudo mkdir /usr/share/gnome-background-properties
sudo cp -r /home/$USER/customization/mojave/* /usr/share/backgrounds/gnome
sudo mv /usr/share/backgrounds/gnome/gnome-backgrounds.xml /usr/share/gnome-background-properties
# ^
#sudo cp -r /home/$USER/customization/Adwaita-Slim-Dark /usr/share/themes
# ^
sudo rm -r /home/$USER/customization
echo
echo "[ INSTALLING THEMES ]"
# Ant-Nebula
sudo git clone https://github.com/EliverLara/Ant-Nebula --branch slim /usr/share/themes/Ant-Nebula
# Materia-Dark Theme
	#git clone --depth 1 https://github.com/nana-4/materia-theme /home/$USER/materia-theme
	#cd /home/$USER/materia-theme
	#sudo ./install.sh -c dark -s compact
	#sudo mv /usr/share/themes/Materia* /usr/share/themes/Materia-Dark
	#sudo rm -r /home/$USER/materia-theme
# Sierra Theme
	git clone https://github.com/vinceliuice/Sierra-gtk-theme.git /home/$USER/Sierra-gtk-theme
	cd /home/$USER/Sierra-gtk-theme
	sudo ./install.sh -d /usr/share/themes -c dark -o standard -f compact -a standard -na
	sudo rm -r /usr/share/themes/Sierra-compact-dark-*
	sudo mv /usr/share/themes/Sierra* /usr/share/themes/Sierra-Dark
	sudo rm -r /home/$USER/Sierra*
# Minwaita Dark theme
	#cd /usr/share/themes
	#sudo git clone https://github.com/godlyranchdressing/Minwaita.git /usr/share/themes/MinwaitaTEMP1
	#sudo mkdir /usr/share/themes/MinwaitaTEMP1/MinwaitaTEMP2
	#cd /usr/share/themes/MinwaitaTEMP1/MinwaitaTEMP2
	#sudo tar -xzvf /usr/share/themes/MinwaitaTEMP1/Minwaita-OSX.tar.gz
	#sudo mv Minwaita-OSX-Dark /usr/share/themes/
	#sudo rm -r /usr/share/themes/MinwaitaTEMP1
echo
echo "[ HIDING AVAHI APPS FROM APPS VIEW ]"
sudo ln -sf /dev/null /etc/systemd/system/avahi-daemon.service
sudo ln -sf /dev/null /etc/systemd/system/avahi-daemon.socket
sudo ln -sf /dev/null /etc/systemd/system/dbus-org.freedesktop.Avahi.service
sudo bash -c "echo 'NoDisplay=true' >> /usr/share/applications/avahi-discover.desktop"
sudo bash -c "echo 'NoDisplay=true' >> /usr/share/applications/bssh.desktop"
sudo bash -c "echo 'NoDisplay=true' >> /usr/share/applications/bvnc.desktop"
sudo update-desktop-database
echo
echo "----------------------------------------------------------------------"
echo "CHANGING GDM GSETTINGS"
echo "----------------------------------------------------------------------"
# Enable tap to click
sudo -u gdm dbus-launch gsettings set org.gnome.desktop.peripherals.touchpad tap-to-click true
gsettings set org.gnome.desktop.peripherals.touchpad tap-to-click true
# Enable 12 hour clock
sudo -u gdm dbus-launch gsettings set org.gnome.desktop.interface clock-format 12h
gsettings set org.gnome.desktop.interface clock-format 12h
# Cursor Theme
#sudo -u gdm dbus-launch gsettings set org.gnome.desktop.interface cursor-theme "'capitaine-cursors'"
echo
echo "----------------------------------------------------------------------"
echo "SETTING UP POST INSTALL SCRIPT TO RUN AFTER REBOOT"
echo "----------------------------------------------------------------------"
cat << EOT >> /home/$USER/.config/autostart/rungnomepostinstall.desktop
[Desktop Entry]
Type=Application
Version=1.0
Name=gnomepostinstall
Exec=/home/$USER/gnomepostinstall
Terminal=true
EOT
chmod +x /home/$USER/.config/autostart/rungnomepostinstall.desktop
echo
echo "----------------------------------------------------------------------"
echo "REBOOTING"
echo "----------------------------------------------------------------------"
sudo reboot